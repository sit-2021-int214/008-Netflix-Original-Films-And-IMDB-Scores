str(survey)
str(survey)
str(survey)
str(survey)
str(survey)
str(survey)
View(survey)
help(package=survey)
install.packages("MASS")
install.packages("MASS")
library(MASS)
View(cats)
View(survey)
sort(table(years), decreasing = TRUE) # 2017 and 2021
sort(table(years), decreasing = TRUE) # 2017 and 2021
names <- c("Iron Man","The Incredible Hulk","Iron Man 2","Thor","Captain America: The First Avenger",
"The Avengers","Iron Man 3","Thor: The Dark World","Captain America: The Winter Soldier",
"Guardians of the Galaxy","Avengers: Age of Ultron","Ant-Man","Captain America: Civil War",
"Doctor Strange","Guardians of the Galaxy 2","Spider-Man: Homecoming","Thor: Ragnarok","Black Panther",
"Avengers: Infinity War","Ant-Man and the Wasp","Captain Marvel","Avengers: Endgame",
"Spider-Man: Far From Home","WandaVision","Falcon and the Winter Soldier","Loki","Black Widow")
years <- c(2008,2008,2010,2011,2011,2012,rep(2013:2016,each=2),
rep(2017,4),rep(2018,2),rep(2019,3),rep(2021,4))
#Which year is most released movies
table(years)
marvel_movies <- data.frame(names,years)
View(marvel_movies)
#Finding the 19th movies name
names[19] # Avengers: Infinity War
#The numbers of movies
length(names) # 27
#Which year is most released movies
table(years)
tabel(cats:btw)
tabel(cats:Bwt)
tabel(cats$Bwt)
#Which year is most released movies
table(years)
table(cats$Sex)
tabel(cats)
tabel(cats)
count(cats)
lenght(cats)
length(cats)
length(cats$sex)
summary(cats)
length(cats$Sex)
max(cats$Hwt)
mean(survey$Age)
mode(survey$Smoke)
Mode(survey$Smoke)
Mod(survey$Smoke)
mod(survey$Smoke)
table(survey$Smoke)
mean(cats$Bwt)
table(cats$Sex)
mean(survey$Pulse,na.rm=TRUE)
mean(survey$Pulse,na.rm=TRUE)
avgcatsM <- mean(cats$Bwt[cats$Sex == "M"])
avgcatsM
avgcatsF <- mean(cats$Bwt[cats$Sex == "F"])
avgcatsF
MaxHWcats <- max(cats$Hwt)
MaxHWcats
mean(survey$Age)
max(cats$Hwt)
minAge <- min(survey$Age)
maxAge <- max(survey$Age)
minAge
maxAge
mean(survey$Pulse
mean(survey$Pulse)
mean(survey$Pulse)
Mode(survey$Smoke,na.rm=TRUE)
Mode(survey$Smoke,na.rm=TRUE)
Mode(survey$Smoke,na.rm=TRUE)
library(MASS)
Mode(survey$Smoke,na.rm=TRUE)
library(DescTools)
Mode(survey$Smoke,na.rm=TRUE)
Mode(survey$Exer,na.rm=TRUE)
str(mtcars)
head(mtcars)
summary(mtcars)
colMeans(mtcars)
Mode(survey$Exer[survey$Sex == "Female"])
Mode(survey$Exer=="Freq"[survey$Sex == "Female"])
library(dplyr)
glimpse(starwars)
str(starwars)
starwars$height %>% mean(na.rm=T)
starwars$height %>% mean(na.rm=T)
catsM <- cats$Sex[cats$Sex == "M"] %>% sum()
catsM <- cats$Sex == :"M" %>% sum()
catsM <- cats$Sex == "M" %>% sum()
avgcatsM <- cats$Bwt[cats$Sex == "M"] %>% mean()
avgcatsM #2.9
avgcatsF #2.359574
avgcatsF <- cats$Bwt[cats$Sex == "F"] %>% mean()
avgcatsM <- cats$Bwt[cats$Sex == "M"] %>% mean()
avgcatsF <- cats$Bwt[cats$Sex == "F"] %>% mean()
avgcatsM <- cats$Bwt[cats$Sex == "M"] %>% mean()
avgcatsF <- cats$Bwt[cats$Sex == "F"] %>% mean()
avgcatsM <- cats$Bwt[cats$Sex == "M"] %>% mean()
avgcatsF <- cats$Bwt[cats$Sex == "F"] %>% mean()
library(cats)
library(MASS)
catsM <- cats$Sex == "M" %>% sum()
catsM <- cats$Sex[cats$Sex == "M"] %>% sum()
avgcatsM <- cats$Bwt[cats$Sex == "M"] %>% mean()
avgcatsM #2.9
avgcatsF <- cats$Bwt[cats$Sex == "F"] %>% mean()
avgcatsF #2.359574
catsM <- sum(cats$Sex == "M")
catsM <- cats$Sex[cats$Sex == "M"] %>% sum()
catsM <- cats %>% sum(cats$Sex == "M")
cats %>% sum(cats$Sex == "M")
catsM <- cats %>% dplyr::summarise(sum(cats$Sex == "M"))
catsM
catsF <- cats %>% dplyr::summarise(sum(cats$Sex == "F"))
catsF
catsM - catsF
cats %>% dplyr::summarise(max(cats$Hwt))
minAge <- survey %>% dplyr::summarise(min(survey$Age))
maxAge <- survey %>% dplyr::summarise(max(survey$Age))
minAge
maxAge
maxAge - minAge
survey$Smoke %>% Mode(na.rm=TRUE)
library(DescTools)
survey$Smoke %>% Mode(na.rm=TRUE)
survey$Pulse %>% mean(na.rm=TRUE);
survey$Exer[survey$Sex == "Female"] %>% table();
survey$Exer[survey$Sex == "Female"] %>% table();
cats$Hwt[cats$Sex == "M"] %>% mean()
cats$Hwt[cats$Sex == "F"] %>% mean()
# Adding component
marvel_plot + ggtitle("Number of Released Marvel Movies") +
xlab("Year Released") + ylab("Number of Movies")
# Set data
count_marvel <-table(Marvels$years)
# Load data
Marvels <- read_csv("https://raw.githubusercontent.com/safesit23/INT214-Statistics/main/datasets/Marvels.csv")
install.packages('ggplot2')
library(dplyr)
library(readr)
#Base R
hist(starwars$height)
# Load data
Marvels <- read_csv("https://raw.githubusercontent.com/safesit23/INT214-Statistics/main/datasets/Marvels.csv")
# Set data
count_marvel <-table(Marvels$years)
# Create graph
barplot(count_marvel)
barplot(count_marvel,
main = "Number of Released Marvel Movies",   # Title of graphs
xlab = "Year Released",       # X-Axis Title
ylab = "Number of Movies",    # Y-Axis Title
)
library(ggplot2)
ggplot(Marvels,aes(x=years)) + geom_bar()
# Save to object
marvel_plot <- ggplot(Marvels,aes(x=years)) + geom_bar()
# Adding component
marvel_plot + ggtitle("Number of Released Marvel Movies") +
xlab("Year Released") + ylab("Number of Movies")
#2-2
starwars %>% ggplot(aes(x=height,y=mass))+geom_point()
starwars %>% filter(mass<500) %>% ggplot(aes(x=height,y=mass)) + geom_point()
scat_plot <- starwars %>% filter(mass<500) %>% ggplot(aes(x=height,y=mass))+
geom_point(aes(color=gender))
scat_plot
scat_plot+geom_smooth() #default value - loess
scat_plot+geom_smooth(method="lm") #linear model
#3
starwars %>% ggplot(aes(x=height))+geom_histogram(binwidth = 15)
#3
starwars %>% ggplot(aes(x=height))+geom_histogram(binwidth = 50)
15
#3
starwars %>% ggplot(aes(x=height))+geom_histogram(binwidth = 15)
library(dplyr)
library(readr)
# Step 0: Load data
Netflix_IMDB <- read_csv("https://raw.githubusercontent.com/sit-2021-int214/008-Netflix-Original-Films-And-IMDB-Scores/main/NetflixOriginals.csv")
view(Netflix_IMDB)
View(Netflix_IMDB)
glimpse(Netflix_IMDB)
View(Netflix_IMDB)
View(Netflix_IMDB)
View(Netflix_IMDB)
View(Netflix_IMDB)
Movies %>% filter(IMDB Score == max(IMDB Score));
Netflix_IMDB %>% filter(`IMDB Score` == max(`IMDB Score`));
# Cleaning Data
Netflix_IMDB$Title <- Netflix_IMDB$Title %>% str_remove("�")
# Cleaning Data
Netflix_IMDB$Title <- Netflix_IMDB$Title %>% str_remove("<U+FFFD>")
library(dplyr)
library(stringr)
library(tidyr)
library(assertive)
library(readr)
# Cleaning Data
Netflix_IMDB$Title <- Netflix_IMDB$Title %>% str_remove("�")
glimpse(Netflix_IMDB)
Netflix_IMDB$Premiere <- Netflix_IMDB$Premiere %>% str_remove("January ")
# 2
Movies %>% filter(Genre == "Documentary") %>% summarise(meanDocumentary = mean(`IMDB Score`))
# 2
Movies %>% filter(Genre == "Documentary") %>% summarise(meanDocumentary = mean(`IMDB Score`))
# 2
Netflix_IMDB %>% filter(Genre == "Documentary") %>% summarise(meanDocumentary = mean(`IMDB Score`))
Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(`meanIMDB = mean`))
Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(`mean IMDB = mean`))
Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(mean IMDB = mean))
Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(meanIMDB = mean))
IMDBGenre <- Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(meanIMDB = mean))
View(IMDBGenre)
# 1
Netflix_IMDB %>% filter(`IMDB Score` == max(`IMDB Score`));
Netflix_IMDB$`IMDB Score`<- Netflix_IMDB$`IMDB Score` %>% rename(IMDB_Score = IMDB.Score)
Movies %>%count(Language)
Netflix_IMDB %>%count(Language)
glimpse(Netflix_IMDB)
as_tibble(Netflix_IMDB)
as_tibble(GenreIMDBmean)
# 2
GenreIMDBmean <- Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(meanIMDB = mean))
as_tibble(GenreIMDBmean)
# 1
Netflix_maxIMDB <- Netflix_IMDB %>% filter(`IMDB Score` == max(`IMDB Score`));
as_tibble(Netflix_maxIMDB)
Netflix_IMDB$`IMDB Score`<- Netflix_IMDB$`IMDB Score` %>% rename(IMDB_Score = IMDB.Score)
library(dplyr)
library(stringr)
library(tidyr)
library(assertive)
library(readr)
Netflix_IMDB$`IMDB Score`<- Netflix_IMDB$`IMDB Score` %>% rename(IMDB_Score = IMDB.Score)
install.packages('tidyr')
library(tidyr)
Netflix_IMDB$`IMDB Score`<- Netflix_IMDB$`IMDB Score` %>% rename(IMDB_Score = IMDB.Score)
Netflix_IMDB$`IMDB Score`<- Netflix_IMDB$`IMDB Score` %>% rename(IMDB Score = IMDB.Score)
# 3
movie_language <- Netflix_IMDB %>%count(Language)
as_tibble(movie_language)
Netflix_IMDB$Runtime %>% mean()
# 4
Netflix_IMDB$Runtime %>% mean()
# 1
Netflix_maxIMDB <- data.frame(Netflix_IMDB %>% filter(`IMDB Score` == max(`IMDB Score`)))
as_tibble(Netflix_maxIMDB)
# 2
GenreIMDBmean <- data.frame(Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(meanIMDB = mean)))
as_tibble(movie_language)
# 4
meanRuntime <- data.frame(Netflix_IMDB$Runtime %>% mean())
as_tibble(meanRuntime)
Netflix_IMDB <- Movies %>% rename(IMDB_Score=`IMDB Score`)
Netflix_IMDB <- Netflix_IMDB %>% rename(IMDB_Score=`IMDB Score`)
glimpse(Netflix_IMDB)
# Step 3: TransformData
Netflix_IMDB <- Netflix_IMDB$Premiere %>% rename(
April = 04
)
# Step 3: TransformData
Netflix_IMDB <- Netflix_IMDB$Premiere %>% rename(
April = '04'
)
# Step 3: TransformData
Netflix_IMDB <- Netflix_IMDB$Premiere %>% rename(
April = qwewqe
)
View(Netflix_IMDB)
View(Netflix_IMDB)
# Step 2: Change to tibble
Netflix_IMDB <- as_tibble(Netflix_IMDB)
View(Netflix_IMDB)
View(Netflix_IMDB)
# Step 1: Load data
Netflix_IMDB <- read_csv("https://raw.githubusercontent.com/sit-2021-int214/008-Netflix-Original-Films-And-IMDB-Scores/main/NetflixOriginals.csv")
View(Netflix_IMDB)
View(Netflix_IMDB)
Netflix_IMDB <- Netflix_IMDB %>% rename(IMDB_Score=`IMDB Score`)
# 5
Netflix_IMDB %>% select(Title,IMDB_Score) %>% filter(Netflix_IMDB$IMDB_Score == min(Netflix_IMDB$IMDB_Score))
Netflix_IMDB %>% select(Title,IMDB_Score) %>% filter(Netflix_IMDB$IMDB_Score == max(Netflix_IMDB$IMDB_Score))
max(Netflix_IMDB$IMDB_Score)-min(Netflix_IMDB$IMDB_Score)
Netflix_IMDB$Genre <- as.factor(Netflix_IMDB$Genre)
max(Netflix_IMDB$IMDB_Score)-min(Netflix_IMDB$IMDB_Score)
distanceneIMDB <- max(Netflix_IMDB$IMDB_Score)-min(Netflix_IMDB$IMDB_Score)
as_tibble(distanceneIMDB)
# 6
Netflix_IMDB %>% count(Genre)
max(Netflix_IMDB)
# 6
quantityGenre <- Netflix_IMDB %>% count(Genre)
max(quantityGenre)
# 6
quantityGenre <- Netflix_IMDB %>% count(Genre)
as_tibble(quantityGenre)
bb <- Netflix_IMDB$Genre %>% as.factor()
bb %>% count()
as_tibble(bb)
as_tibble(quantityGenre)
# Cleaning Data
Netflix_IMDB$Title <- Netflix_IMDB$Title %>% str_remove("�")
as_tibble(quantityGenre)
max(quantityGenre)
View(IMDBGenre)
View(IMDBGenre)
View(quantityGenre)
# 6
qg <- Movies %>% count(Genre)
# 6
qg <- Netflix_IMDB %>% count(Genre)
library(dplyr)
library(stringr)
library(tidyr)
library(assertive)
library(readr)
# 6
qg <- Netflix_IMDB %>% count(Genre)
as_tibble(qg)
qg %>% select(Genre,n) %>% filter(n == max(n))
# 6
maxGenre <- Netflix_IMDB %>% count(Genre)
qg %>% select(Genre,n) %>% filter(n == max(n))
# Step 1: Load data
Netflix_IMDB <- read_csv("https://raw.githubusercontent.com/sit-2021-int214/008-Netflix-Original-Films-And-IMDB-Scores/main/NetflixOriginals.csv")
View(Netflix_IMDB)
View(Netflix_IMDB)
##Checkpoint 1
write.csv(Netflix_IMDB,"C:\\Users\\USER\\Desktop\\R-214\\Netflix_IMDB_Clean.csv",row.names=FALSE)
library(dplyr)
library(dplyr)
library(dplyr)
library(stringr)
library(tidyr)
library(assertive)
library(readr)
# Step 1: Load data
Netflix_IMDB <- read_csv("https://raw.githubusercontent.com/sit-2021-int214/008-Netflix-Original-Films-And-IMDB-Scores/main/NetflixOriginals.csv")
# Step 2: Change to tibble
Netflix_IMDB <- as_tibble(Netflix_IMDB)
glimpse(Netflix_IMDB)
# Step 3: Cleaning Data
Netflix_IMDB$Title <- Netflix_IMDB$Title %>% str_remove("???")
Netflix_IMDB <- Netflix_IMDB %>% rename(IMDB_Score=`IMDB Score`)
Netflix_IMDB$Genre <- as.factor(Netflix_IMDB$Genre)
# 1
Netflix_maxIMDB <- data.frame(Netflix_IMDB %>% filter(`IMDB Score` == max(`IMDB Score`)))
as_tibble(Netflix_maxIMDB)
# 2
GenreIMDBmean <- data.frame(Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(meanIMDB = mean)))
as_tibble(GenreIMDBmean)
# 3
movie_language <- data.frame(Netflix_IMDB %>%count(Language))
as_tibble(movie_language)
# 4
meanRuntime <- data.frame(Netflix_IMDB$Runtime %>% mean())
as_tibble(meanRuntime)
# 5
Netflix_IMDB %>% select(Title,IMDB_Score) %>% filter(Netflix_IMDB$IMDB_Score == min(Netflix_IMDB$IMDB_Score))
Netflix_IMDB %>% select(Title,IMDB_Score) %>% filter(Netflix_IMDB$IMDB_Score == max(Netflix_IMDB$IMDB_Score))
distanceneIMDB <- max(Netflix_IMDB$IMDB_Score)-min(Netflix_IMDB$IMDB_Score)
as_tibble(distanceneIMDB)
# 6
quantityGenre <- Movies %>% count(Genre)
as_tibble(quantityGenre)
quantityGenre %>% select(Genre,n) %>% filter(n == max(n))
##Checkpoint 1
write.csv(Netflix_IMDB,"c:/Users/Admin/Desktop/int214/008-Netflix-Original-Films-And-IMDB-Scores/Netflix_IMDB_Clean.csv",row.names=FALSE)
Netflix_IMDB$Premiere <- Netflix_IMDB$Premiere %>% str_remove("1") %>% str_remove("2") %>% str_remove("3") %>% str_remove("4") %>%
str_remove("5") %>% str_remove("6") %>% str_remove("7") %>% str_remove("8") %>% str_remove("9")
library(dplyr)
library(stringr)
library(tidyr)
library(assertive)
library(readr)
# Step 1: Load data
Netflix_IMDB <- read_csv("https://raw.githubusercontent.com/sit-2021-int214/008-Netflix-Original-Films-And-IMDB-Scores/main/NetflixOriginals.csv")
# Step 2: Change to tibble
Netflix_IMDB <- as_tibble(Netflix_IMDB)
glimpse(Netflix_IMDB)
# Step 3: Cleaning Data
Netflix_IMDB$Title <- Netflix_IMDB$Title %>% str_remove("???")
Netflix_IMDB <- Netflix_IMDB %>% rename(IMDB_Score=`IMDB Score`)
Netflix_IMDB$Genre <- as.factor(Netflix_IMDB$Genre)
# 1
Netflix_maxIMDB <- data.frame(Netflix_IMDB %>% filter(`IMDB Score` == max(`IMDB Score`)))
as_tibble(Netflix_maxIMDB)
# 2
GenreIMDBmean <- data.frame(Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(meanIMDB = mean)))
as_tibble(GenreIMDBmean)
# 3
movie_language <- data.frame(Netflix_IMDB %>%count(Language))
as_tibble(movie_language)
# 4
meanRuntime <- data.frame(Netflix_IMDB$Runtime %>% mean())
as_tibble(meanRuntime)
# 5
Netflix_IMDB %>% select(Title,IMDB_Score) %>% filter(Netflix_IMDB$IMDB_Score == min(Netflix_IMDB$IMDB_Score))
Netflix_IMDB %>% select(Title,IMDB_Score) %>% filter(Netflix_IMDB$IMDB_Score == max(Netflix_IMDB$IMDB_Score))
distanceneIMDB <- max(Netflix_IMDB$IMDB_Score)-min(Netflix_IMDB$IMDB_Score)
as_tibble(distanceneIMDB)
# 6
quantityGenre <- Movies %>% count(Genre)
# 6
quantityGenre <- Netflix_IMDB %>% count(Genre)
as_tibble(quantityGenre)
quantityGenre %>% select(Genre,n) %>% filter(n == max(n))
library(dplyr)
library(stringr)
library(tidyr)
library(assertive)
library(readr)
# Step 1: Load data
Netflix_IMDB <- read_csv("https://raw.githubusercontent.com/sit-2021-int214/008-Netflix-Original-Films-And-IMDB-Scores/main/NetflixOriginals.csv")
# Step 2: Change to tibble
Netflix_IMDB <- as_tibble(Netflix_IMDB)
glimpse(Netflix_IMDB)
# Step 3: Cleaning Data
Netflix_IMDB$Title <- Netflix_IMDB$Title %>% str_remove("???")
Netflix_IMDB <- Netflix_IMDB %>% rename(IMDB_Score=`IMDB Score`)
Netflix_IMDB$Genre <- as.factor(Netflix_IMDB$Genre)
# 6
quantityGenre <- Netflix_IMDB %>% count(Genre)
quantityGenre %>% select(Genre,n) %>% filter(n == max(n))
setwd('c/Users/Admin/Desktop/KMUTT/int214/008-Netflix-Original-Films-And-IMDB-Scores')
setwd('Users/Admin/Desktop/KMUTT/int214/008-Netflix-Original-Films-And-IMDB-Scores')
setwd('/Users/Admin/Desktop/KMUTT/int214/008-Netflix-Original-Films-And-IMDB-Scores')
library(dplyr)
library(stringr)
library(tidyr)
library(assertive)
library(readr)
# Step 1: Load data
Netflix_IMDB <- read_csv("https://raw.githubusercontent.com/sit-2021-int214/008-Netflix-Original-Films-And-IMDB-Scores/main/NetflixOriginals.csv")
# Step 2: Change to tibble
Netflix_IMDB <- as_tibble(Netflix_IMDB)
glimpse(Netflix_IMDB)
# Step 3: Cleaning Data
Netflix_IMDB$Title <- Netflix_IMDB$Title %>% str_remove("???")
Netflix_IMDB <- Netflix_IMDB %>% rename(IMDB_Score=`IMDB Score`)
Netflix_IMDB$Genre <- gsub('Science fiction','Science',Netflix_IMDB$Genre)
Netflix_IMDB$Genre <- gsub('Heist film','Heist',Netflix_IMDB$Genre)
Netflix_IMDB$Genre <- gsub('Family film','Family' ,Netflix_IMDB$Genre)
Netflix_IMDB$Genre <- as.factor(Netflix_IMDB$Genre)
# 1
Netflix_maxIMDB <- data.frame(Netflix_IMDB %>% filter(`IMDB Score` == max(`IMDB Score`)))
as_tibble(Netflix_maxIMDB)
# 2
GenreIMDBmean <- data.frame(Netflix_IMDB %>% group_by(Genre) %>% summarise_at(vars(`IMDB Score`), list(meanIMDB = mean)))
as_tibble(GenreIMDBmean)
# 3
movie_language <- data.frame(Netflix_IMDB %>%count(Language))
as_tibble(movie_language)
# 4
meanRuntime <- data.frame(Netflix_IMDB$Runtime %>% mean())
as_tibble(meanRuntime)
# 5
Netflix_IMDB %>% select(Title,IMDB_Score) %>% filter(Netflix_IMDB$IMDB_Score == min(Netflix_IMDB$IMDB_Score))
Netflix_IMDB %>% select(Title,IMDB_Score) %>% filter(Netflix_IMDB$IMDB_Score == max(Netflix_IMDB$IMDB_Score))
distanceneIMDB <- max(Netflix_IMDB$IMDB_Score)-min(Netflix_IMDB$IMDB_Score)
as_tibble(distanceneIMDB)
# 6
Netflix <- Netflix_IMDB %>% mutate(
movieGenre = strsplit(as.character(Netflix_IMDB$Genre)," "),
movieGenre = lapply(movieGenre, gsub, pattern = " ", replacement = "")
)
View(Netflix)
Netflix2 <- Netflix %>% mutate(
NetflixGenre = strsplit(as.character(Netflix$movieGenre),"/"),
NetflixGenre = lapply(NetflixGenre, gsub, pattern = " ", replacement = "")
)
View(Netflix2)
FinalNetflix <- Netflix2 %>% mutate(
Netflix_Genre = strsplit(as.character(Netflix2$NetflixGenre),"-"),
Netflix_Genre = lapply(Netflix_Genre, gsub, pattern = " ", replacement = "")
)
View(FinalNetflix)
FinalNetflix %>% select(Netflix_Genre) %>% unnest(Netflix_Genre)%>%
count(Netflix_Genre)%>% arrange(desc(n))%>% View()
##Checkpoint 1
write.csv(Netflix_IMDB,"C:\\Users\\USER\\Desktop\\008-Netflix-Original-Films-And-IMDB-Scores\\Netflix_IMDB_Clean.csv",row.names=FALSE)
View(FinalNetflix)
FinalNetflix %>% select(Netflix_Genre) %>% unnest(Netflix_Genre)%>%
count(Netflix_Genre)%>% arrange(desc(n))%>% View()
theMostGenre <- FinalNetflix %>% select(Netflix_Genre) %>% unnest(Netflix_Genre)%>%
count(Netflix_Genre)%>% arrange(desc(n))%>% View()
glimpse(theMostGenre)
View(FinalNetflix)
# 6
Netflix <- Netflix_IMDB %>% mutate(
movieGenre = strsplit(as.character(Netflix_IMDB$Genre)," "),
movieGenre = lapply(movieGenre, gsub, pattern = " ", replacement = "")
)
View(Netflix)
Netflix2 <- Netflix %>% mutate(
NetflixGenre = strsplit(as.character(Netflix$movieGenre),"/"),
NetflixGenre = lapply(NetflixGenre, gsub, pattern = " ", replacement = "")
)
View(Netflix2)
FinalNetflix <- Netflix2 %>% mutate(
Netflix_Genre = strsplit(as.character(Netflix2$NetflixGenre),"-"),
Netflix_Genre = lapply(Netflix_Genre, gsub, pattern = " ", replacement = "")
)
View(FinalNetflix)
FinalNetflix %>% select(Netflix_Genre) %>% unnest(Netflix_Genre)%>%
count(Netflix_Genre)%>% arrange(desc(n))%>% View()
